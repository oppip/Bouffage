// <auto-generated />
using System;
using Bouffage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bouffage.Migrations
{
    [DbContext(typeof(BouffageContext))]
    partial class BouffageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bouffage.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Tag")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Bouffage.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CommentOnRecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CommentPosted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Critique")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("ReplyCommentId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfComments")
                        .HasColumnType("int");

                    b.Property<int>("Useful")
                        .HasColumnType("int");

                    b.Property<int>("Useless")
                        .HasColumnType("int");

                    b.Property<int?>("UserCommentedId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("CommentOnRecipeId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("ReplyCommentId");

                    b.HasIndex("UserCommentedId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Bouffage.Models.Following", b =>
                {
                    b.Property<int>("FollowingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateFollowed")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserFolloweeId")
                        .HasColumnType("int");

                    b.Property<int>("UserFollowingId")
                        .HasColumnType("int");

                    b.HasKey("FollowingId");

                    b.HasIndex("UserFolloweeId");

                    b.HasIndex("UserFollowingId");

                    b.ToTable("Following");
                });

            modelBuilder.Entity("Bouffage.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IngredientUsed")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("Bouffage.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Complexity")
                        .HasColumnType("int");

                    b.Property<int>("ComplexityId")
                        .HasColumnType("int");

                    b.Property<int>("CookTime")
                        .HasColumnType("int");

                    b.Property<int>("Cuisine")
                        .HasColumnType("int");

                    b.Property<int>("CuisineId")
                        .HasColumnType("int");

                    b.Property<int>("Downvotes")
                        .HasColumnType("int");

                    b.Property<string>("Essay")
                        .HasColumnType("nvarchar(700)")
                        .HasMaxLength(700);

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrepTime")
                        .HasColumnType("int");

                    b.Property<string>("Preparation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("SpecialEquipment")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Upvotes")
                        .HasColumnType("int");

                    b.Property<int>("UserPostedRecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId");

                    b.HasIndex("UserPostedRecipeId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Bouffage.Models.RecipeInCategory", b =>
                {
                    b.Property<int>("RecipeInCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeInCategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeInCategory");
                });

            modelBuilder.Entity("Bouffage.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<int>("Followers")
                        .HasColumnType("int");

                    b.Property<int>("Following")
                        .HasColumnType("int");

                    b.Property<int>("Karma")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool>("VerifiedEmail")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Bouffage.Models.VoteComment", b =>
                {
                    b.Property<int>("VoteCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentGotVoted")
                        .HasColumnType("int");

                    b.Property<string>("UpOrDown")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("UserVotedThisComment")
                        .HasColumnType("int");

                    b.HasKey("VoteCommentId");

                    b.HasIndex("UserVotedThisComment");

                    b.ToTable("VoteComment");
                });

            modelBuilder.Entity("Bouffage.Models.VoteRecipe", b =>
                {
                    b.Property<int>("VoteRecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RecipeGotVoted")
                        .HasColumnType("int");

                    b.Property<string>("UpOrDown")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("UserVotedThisRecipe")
                        .HasColumnType("int");

                    b.HasKey("VoteRecipeId");

                    b.HasIndex("UserVotedThisRecipe");

                    b.ToTable("VoteRecipe");
                });

            modelBuilder.Entity("Bouffage.Models.Comment", b =>
                {
                    b.HasOne("Bouffage.Models.Recipe", "Recipe")
                        .WithMany("CommentsOnThisRecipe")
                        .HasForeignKey("CommentOnRecipeId");

                    b.HasOne("Bouffage.Models.Recipe", null)
                        .WithMany("Users")
                        .HasForeignKey("RecipeId");

                    b.HasOne("Bouffage.Models.Comment", "Reply")
                        .WithMany("Replies")
                        .HasForeignKey("ReplyCommentId");

                    b.HasOne("Bouffage.Models.User", "User")
                        .WithMany("MyComments")
                        .HasForeignKey("UserCommentedId");
                });

            modelBuilder.Entity("Bouffage.Models.Following", b =>
                {
                    b.HasOne("Bouffage.Models.User", "UserFollowee")
                        .WithMany("IFollow")
                        .HasForeignKey("UserFolloweeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bouffage.Models.User", "UserFollowing")
                        .WithMany("FollowMe")
                        .HasForeignKey("UserFollowingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Bouffage.Models.Ingredient", b =>
                {
                    b.HasOne("Bouffage.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("Bouffage.Models.Recipe", b =>
                {
                    b.HasOne("Bouffage.Models.User", "User")
                        .WithMany("MyRecipes")
                        .HasForeignKey("UserPostedRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bouffage.Models.RecipeInCategory", b =>
                {
                    b.HasOne("Bouffage.Models.Category", "Category")
                        .WithMany("RecipesInThisCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bouffage.Models.Recipe", "Recipe")
                        .WithMany("Categories")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bouffage.Models.VoteComment", b =>
                {
                    b.HasOne("Bouffage.Models.Comment", "Comment")
                        .WithMany("UsersThatVotedComment")
                        .HasForeignKey("UserVotedThisComment")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bouffage.Models.User", "User")
                        .WithMany("VotedComments")
                        .HasForeignKey("UserVotedThisComment")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Bouffage.Models.VoteRecipe", b =>
                {
                    b.HasOne("Bouffage.Models.Recipe", "Recipe")
                        .WithMany("UsersThatVotedRecipe")
                        .HasForeignKey("UserVotedThisRecipe")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bouffage.Models.User", "User")
                        .WithMany("VotedRecipes")
                        .HasForeignKey("UserVotedThisRecipe")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
