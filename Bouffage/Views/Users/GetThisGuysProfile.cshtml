@model Bouffage.ViewModels.UserRecipesViewModel
@{
    ViewData["Title"] = Html.DisplayFor(modelItem => Model.User.Username);
}

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
<div class="card bg-warning" style="width: 100%; margin-left: 7px;">
    <div class="card-body">
        <div class="inline" style="width: 18%">
            <img src="@Model.User.Picture" alt="Profile picture" class="profilepic" />
        </div>
        <div class="inline">
            <h4 class="card-title">@Html.DisplayFor(modelItem => Model.User.Username)</h4>
            <h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(modelItem => Model.User.Email)</h6>
        </div>
        <div class="inline">
            <div>
                <p class="card-text inline"> Following: @Html.DisplayFor(modelItem => Model.User.Following)</p>
                <p class="card-text inline"> Followers: @Html.DisplayFor(modelItem => Model.User.Followers)</p>
            </div>
            @{
                var cookie = HttpContextAccessor.HttpContext.Request.Cookies["MyCookie"];
                string[] list = { "", "", "" };
                if (cookie != null)
                {
                    list = cookie.Split("&%&");
                }

                int Useruserid = 0;
                Int32.TryParse(list[0], out Useruserid);
                var Userusername = list[1];
                var UserRole = list[2];

                @if (ViewBag.followingeachother == true)
                {
                    <form style="border: unset" asp-action="Unfollow" asp-controller="Followings" method="POST">
                        <input type="hidden" name="user_id" value=@Model.User.UserId>
                        <button type="submit" class="follow" style="background-color: orangered">Unfollow</button>
                    </form>
                }
                else
                {
                    if (Useruserid == Model.User.UserId)
                    {
                        <button class="follow" style="background-color: #4287f5" onclick="myfunc()">Surprise!</button>
                        <script>
                            function myfunc() {
                                if (confirm("Are you ready?")) {
                                    window.open("https://youtu.be/dQw4w9WgXcQ");
                                }
                            }
                        </script>
                    }
                    else
                    {
                        <form style="border: unset" asp-action="Follow" asp-controller="Followings" method="POST">
                            <input type="hidden" name="user_id" value=@Model.User.UserId>
                            <button type="submit" class="follow">Follow</button>
                        </form>
                    }
                }

            }
        </div>
        <div class="inline" style="width: 30%">
            <p style="text-align:center">
                Karma: @Html.DisplayFor(modelItem => Model.User.Karma)
            </p>
            <div class="progress justify-content-end" id="progress-bar">
                @{ var percentage = 0.0;
                    foreach (var item in Model.Recipes)
                    {
                        percentage += item.Upvotes;
                        percentage += item.Downvotes;
                    }
                    foreach (var item in Model.Comments)
                    {
                        percentage += item.Useful;
                        percentage += item.Useless;
                    }
                    var karma = Model.User.Karma;

                    percentage = (double)karma / percentage;
                    percentage *= 100;
                    percentage = Math.Round(percentage);

                    if (percentage > 200)
                    {
                        Random r = new Random();
                        int per = r.Next(100);          //for those who dont have posts just for test
                        percentage = (double)per;
                    }
                    percentage = 100 - percentage;
                }
                <div class="progress-bar bg-white" role="progressbar" style="width: @percentage%;" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>

        <div class="inline" style="float: right">
            @{
                if (UserRole == "Admin")
                {
                    if (Model.User.Role == "Admin")
                    {
                        <a class="cancelbtn" asp-area="" asp-controller="Users" asp-action="RemoveAdminStatus" asp-route-id=@Model.User.UserId>Remove admin status</a>
                    }
                    else
                    {
                        <a class="cancelbtn" asp-area="" asp-controller="Users" asp-action="MakeUserAdmin" asp-route-id=@Model.User.UserId>Make user admin</a>
                    }
                    <a class="cancelbtn" asp-area="" asp-controller="Users" asp-action="DeleteAccountA" asp-route-id=@Model.User.UserId>Remove user</a>
                }

                if (Useruserid == Model.User.UserId)
                {
                    <a class="cancelbtn" style="position: absolute; bottom: 10px; right: 20px;" asp-area="" asp-controller="Users" asp-action="DeleteAccount" asp-route-id=@Useruserid>Delete my account</a>
                }
            }
        </div>
    </div>
</div>
<br />
<div>
    <div class="inline" style="width: 59%; float: left;">
        @foreach (var item in Model.Recipes)
        {
            <div class="card border-secondary mb-3" style="margin: auto;">
                <span id="@item.RecipeId"></span>

                <div class="card-header">
                    <h4 style="margin: 0px; display: inline-block">
                        <a class="username inline" asp-controller="Recipes" asp-action="ShowThisRecipe" asp-route-id="@item.RecipeId">
                            @Html.DisplayFor(modelItem => item.Title)
                        </a>
                    </h4>
                    @{
                        string upvote = "u&%&" + item.User.UserId + "&%&" + item.RecipeId;
                        string downvote = "d&%&" + item.User.UserId + "&%&" + item.RecipeId;

                        <form class="voting" asp-action="VoteRecipe" asp-controller="VoteRecipes" method="POST">
                            <input type="hidden" name="recipe" value=@item.RecipeId />

                            <label id="arrow">
                                @item.Upvotes
                                <input type="radio" name="vote" id="upvote" value=@upvote onclick="submit()">
                                <img src="~/Images/uvote.png" alt="placeholder">
                            </label>

                            <label id="arrow">
                                <input type="radio" name="vote" id="downvote" value=@downvote onclick="submit()">
                                <img src="~/Images/dvote.png" alt="placeholder">
                                @item.Downvotes
                            </label>
                        </form>

                        if (UserRole == "Admin" || Useruserid == Model.User.UserId)
                        {
                            <a class="cancelbtn" style="float: right" asp-area="" asp-controller="Recipes" asp-action="Delete" asp-route-id=@item.RecipeId>Delete</a>
                        }
                    }
                </div>

                <img style="width: 100%; height: auto; display: block;" src="@item.Picture" alt="Card image">

                <div class="card-body">
                    <p class="card-text">@Html.DisplayFor(modelItem => item.Essay)</p>
                    <br />

                    <p>
                        @Html.DisplayFor(modelItem => item.Preparation)
                    </p>
                </div>

                <ul class="list-group list-group-flush">
                    @foreach (var ingredient in Model.Ingredients)
                    {
                        @if (ingredient.RecipeId == item.RecipeId)
                        {
                            <li class="list-group-item">
                                @Html.DisplayFor(modelItem => ingredient.IngredientUsed)
                            </li>
                        }
                    }
                </ul>
                <br />

                <div class="card-footer text-muted">
                    @Html.DisplayFor(modelItem => item.PostingDate)
                </div>

            </div>
        }
    </div>

    <div class="inline" style="width: 35%; float: right;">
        @foreach (var comment in Model.Comments)
        {
            <div class="card text-white bg-info mb-3" style="width: auto;">
                <div class="card-header">
                    <a class="username" asp-controller="Recipes" asp-action="ShowThisRecipe" asp-route-id="@comment.CommentOnRecipeId">
                        @Html.DisplayFor(modelItem => comment.Recipe.Title)
                    </a>
                </div>
                <div class="card-body">
                    <h6 class="inline">
                        @Html.DisplayFor(modelItem => Model.User.Username)
                    </h6>
                    @{
                        string comment_upvote = "u&%&" + comment.User.UserId;
                        string comment_downvote = "d&%&" + comment.User.UserId;

                        <form class="voting" style="position: absolute" asp-action="VoteComment" asp-controller="VoteComments" method="POST">
                            <input type="hidden" name="comment" value=@comment.CommentId />

                            <label id="arrow">
                                @comment.Useful
                                <input type="radio" name="vote" id="upvote" value=@comment_upvote onclick="submit()">
                                <img src="~/Images/uvote.png" alt="placeholder">
                            </label>

                            <label id="arrow">
                                <input type="radio" name="vote" id="downvote" value=@comment_downvote onclick="submit()">
                                <img src="~/Images/dvote.png" alt="placeholder">
                                @comment.Useless
                            </label>
                        </form>

                        if (UserRole == "Admin" || Useruserid == Model.User.UserId)
                        {
                            <a class="cancelbtn" style="float: right" asp-area="" asp-controller="Comments" asp-action="Delete" asp-route-id=@comment.CommentId>Delete</a>
                        }
                    }
                    <br />

                    <h5 class="card-text">
                        @Html.DisplayFor(modelItem => comment.Critique)
                    </h5>
                </div>
                <div class="card-footer">
                    @Html.DisplayFor(modelItem => comment.CommentPosted)
                </div>
            </div>
            <br />
        }
    </div>
</div>
<div style="clear: both"></div>

<!--select recipe da se pokaze od kaj korisnikot tocno toj recept
    -->
